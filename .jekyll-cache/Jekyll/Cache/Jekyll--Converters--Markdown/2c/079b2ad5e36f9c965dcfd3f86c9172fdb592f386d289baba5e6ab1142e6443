I"u	<p>After reading The Clean Coder, I found that many of the problems I have met in
my previous company has already been talked about in this book.</p>

<p>The book did not show anything about the tech staff. Most importantly, it is 
talking about how to deal with business people, how to give estimate about 
project time, and tests.</p>

<p>Those are the things we programmer face in day to day life but never learned 
from school. I have to admit that I could have done a lot better if I have 
read the book before. I would be more “professional”.</p>

<p>As a team leader, I have been asked several times about an estimate of how 
long the project would take. I always have difficulty to answer that 
question. If I have reaad the book, I could give more accurate estimate and 
performed more professional about the project time when my boss asked.</p>

<p>When my boss was pushing us to commit, I skipped the tests and wrote many 
dirty code for the backend of that project. Which later I found so difficult
to understand and I refuse to change it at all. I really should have a 
principle at that timme and refused to write such code. And should have 
rewrote them as soon as I have found how bad they were.</p>

<p>We never write enough tests at the previous company. Nobody in the company
really understand the different kinds of tests and how to write unit test.
We do not have QA at all. One of the teammate was manually testing many 
functions. I called for the importance of the tests in many meetings, but even
I myself doubt whether those tests worth my time. We run into problems that 
some bugs leaked into the production. But because not really many people were
using our product, it did not cause any problem. Except once I feel shamed I 
was the one whoe implemented the but in our code and the search was not
working at all. I have admitted the problem in front of my boss and said to 
avoid the same problem in the future, we need tests. But still, no tests.</p>

<p>To summarize, I have leant something important about how to perform 
professional in my career. The book also said the importance about mentoring. 
I wish I had a good mentor in software development. I had one good mentor 
named Gabriel when I was a System Engineer. I was and am still very grateful 
about all the guidance he provided to me. But this time, I was not so lucky 
and have to figure everything out all by myself.</p>
:ET